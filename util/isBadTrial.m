function badtrial = isBadTrial(logSumm,trialidx,relaxCriteria,perfTh,largeVa)

% badtrial = isBadTrial(logSumm,trialidx)
% returns a boolean vector badtrial indicating which trials are bad
% (defined as nil choice or excessTravel > 0.1, corresponding to when they
% get turned around)
% logSumm is generated by summarizeVirmenLog_* and trialidx is a vector
% containing indies of trials to evaluate, if not passed or empty will
% evaluate all trials
% If relaxCriteria is true, then the excessTravel requirement is not applied
% LP aug 2016

%%
if nargin<2
  trialidx = [];
end
if nargin<3 || isempty(relaxCriteria)
  relaxCriteria = false;
end
if nargin<4
  perfTh = [];
end
if nargin<5
  largeVa = false;
end
%%
if isempty(trialidx)
  trialidx = 1:numel(logSumm.choice);
end

badtrial = (logSumm.choice(trialidx) == analysisParams.nilCode)     | ...
           (logSumm.choice(trialidx) == analysisParams.abortCode)   | ...
           cellfun(@(x) any(isnan(x)), logSumm.cuePos_L(trialidx))  | ...
           cellfun(@(x) any(isnan(x)), logSumm.cuePos_R(trialidx));  
if ~relaxCriteria
  badtrial = badtrial | (logSumm.excessTravel(trialidx) >= 0.1);
end
if ~isempty(perfTh) && ~isnan(perfTh)
  if isfield(logSumm,'meanPerfBlockCtrl')
    badtrial = badtrial | (logSumm.meanPerfBlockCtrl(trialidx) < perfTh);
  else
    badtrial = badtrial | (logSumm.meanPerfBlock(trialidx) < perfTh);
  end
end
if largeVa
    badtrial = badtrial | cellfun(@(x) abs(mean(x(:,3))) > 100, logSumm.pos(trialidx));
end